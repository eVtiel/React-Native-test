{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/evtiel/Documents/Web/2020/react-native/rn-starter/src/screens/SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'change_red':\n      if (state.red + action.payload > 255 || state.red + action.payload < 0) {\n        return state;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.payload\n      });\n\n    case 'change_blue':\n      if (state.blue + action.payload > 255 || state.blue + action.payload < 0) {\n        return state;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.payload\n      });\n\n    case 'change_green':\n      if (state.green + action.payload > 255 || state.green + action.payload < 0) {\n        return state;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    blue: 0,\n    green: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      blue = state.blue,\n      green = state.green;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_red',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_red',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_green',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_green',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_blue',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_blue',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 175,\n      width: 175,\n      backgroundColor: \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"rgb(\" + red + \",\" + green + \",\" + blue + \")\")));\n};\n\nvar styles = StyleSheet.create({});\nexport default SquareScreen;","map":{"version":3,"sources":["/Users/evtiel/Documents/Web/2020/react-native/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","type","red","payload","blue","green","SquareScreen","dispatch","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { View, StyleSheet, Text, Button } from 'react-native';\nimport ColorCounter from '../components/ColorCounter';\n\nconst COLOR_INCREMENT = 15;\n\nconst reducer = (state, action) => {\n    // state === { red: number, blue: number, green: number };\n    // action === { type: 'change_red' || 'change_blue' || 'change_green', payloadpayload: 15 || -15 };\n\n    switch (action.type) {\n        case 'change_red':\n            if (state.red + action.payload > 255 || state.red + action.payload < 0) {\n                return state;\n            }\n            return {...state, red: state.red + action.payload};\n        case 'change_blue':\n            if(state.blue + action.payload > 255 || state.blue + action.payload < 0) {\n                return state;\n            }\n            return {...state, blue: state.blue + action.payload};\n        case 'change_green':\n            if (state.green + action.payload > 255 || state.green + action.payload < 0) {\n                return state;\n            }\n            return {...state, green: state.green + action.payload};\n    \n        default:\n            return state;\n    }\n}\n\nconst SquareScreen = () => {\n\n    const [state, dispatch] = useReducer(reducer, { red: 0, blue: 0, green: 0 });\n    const { red, blue, green } = state;\n\n    return (\n        <View>\n            <ColorCounter \n                onIncrease={() => dispatch({ type: 'change_red', payload: COLOR_INCREMENT })}\n                onDecrease={() => dispatch({ type: 'change_red', payload: -1 * COLOR_INCREMENT })}\n                color=\"Red\"\n            />\n            <ColorCounter \n                onIncrease={() => dispatch({ type: 'change_green', payload: COLOR_INCREMENT })}\n                onDecrease={() => dispatch({ type: 'change_green', payload: -1 * COLOR_INCREMENT })}\n                color=\"Green\"\n            />\n            <ColorCounter \n                onIncrease={() => dispatch({ type: 'change_blue', payload: COLOR_INCREMENT })}\n                onDecrease={() => dispatch({ type: 'change_blue', payload: -1 * COLOR_INCREMENT})}\n                color=\"Blue\"\n            />\n            <View>\n                <View style={{ height: 175, width: 175, backgroundColor: `rgb(${red},${green},${blue})`}} />\n    <Text>{`rgb(${red},${green},${blue})`}</Text>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({});\n\nexport default SquareScreen;"]},"metadata":{},"sourceType":"module"}